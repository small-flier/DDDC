{"version":3,"file":"appInit.js","sources":["common/appInit.js"],"sourcesContent":["import uniStarterConfig from '@/uni-starter.config.js';\r\n//应用初始化页\r\n// #ifdef APP\r\nimport checkUpdate from '@/uni_modules/uni-upgrade-center-app/utils/check-update';\nimport callCheckVersion from '@/uni_modules/uni-upgrade-center-app/utils/call-check-version';\r\n\r\n// 实现，路由拦截。当应用无访问摄像头/相册权限，引导跳到设置界面 https://ext.dcloud.net.cn/plugin?id=5095\r\nimport interceptorChooseImage from '@/uni_modules/json-interceptor-chooseImage/js_sdk/main.js';\r\ninterceptorChooseImage()\r\n\r\n// #endif\r\nconst db = uniCloud.database()\r\nexport default async function() {\r\n\tconst debug = uniStarterConfig.debug;\r\n\r\n\t// uniStarterConfig挂载到getApp().globalData.config\r\n\tsetTimeout(() => {\r\n\t\tgetApp({\r\n\t\t\tallowDefault: true\r\n\t\t}).globalData.config = uniStarterConfig;\r\n\t}, 1)\r\n\r\n\r\n\t// 初始化appVersion（仅app生效）\r\n\tinitAppVersion();\r\n\r\n\t//clientDB的错误提示\r\n\tfunction onDBError({\r\n\t\tcode, // 错误码详见https://uniapp.dcloud.net.cn/uniCloud/clientdb?id=returnvalue\r\n\t\tmessage\r\n\t}) {\r\n\t\tconsole.log('onDBError', {\r\n\t\t\tcode,\r\n\t\t\tmessage\r\n\t\t});\r\n\t\t// 处理错误\r\n\t\tconsole.error(code, message);\r\n\t}\r\n\t// 绑定clientDB错误事件\r\n\tdb.on('error', onDBError)\r\n\r\n\r\n\t//拦截云对象请求\r\n\tuniCloud.interceptObject({\r\n\t\tasync invoke({\r\n\t\t\tobjectName, // 云对象名称\r\n\t\t\tmethodName, // 云对象的方法名称\r\n\t\t\tparams // 参数列表\r\n\t\t}) {\n\t\t\t// console.log('interceptObject',{\n\t\t\t// \tobjectName, // 云对象名称\n\t\t\t// \tmethodName, // 云对象的方法名称\n\t\t\t// \tparams // 参数列表\n\t\t\t// });\n\t\t\tif(objectName == \"uni-id-co\" && (methodName.includes('loginBy') ||  ['login','registerUser'].includes(methodName) )){\n\t\t\t\tconsole.log('执行登录相关云对象');\n\t\t\t\tparams[0].inviteCode = await new Promise((callBack) => {\n\t\t\t\t\tuni.getClipboardData({\n\t\t\t\t\t\tsuccess: function(res) {\n\t\t\t\t\t\t\tconsole.log('剪切板内容：'+res.data);\n\t\t\t\t\t\t\tif (res.data.slice(0, 18) == 'uniInvitationCode:') {\n\t\t\t\t\t\t\t\tlet uniInvitationCode = res.data.slice(18, 38)\n\t\t\t\t\t\t\t\tconsole.log('当前用户是其他用户推荐下载的,推荐者的code是：' + uniInvitationCode);\n\t\t\t\t\t\t\t\t// uni.showModal({\n\t\t\t\t\t\t\t\t// \tcontent: '当前用户是其他用户推荐下载的,推荐者的code是：'+uniInvitationCode,\n\t\t\t\t\t\t\t\t// \tshowCancel: false\n\t\t\t\t\t\t\t\t// });\n\t\t\t\t\t\t\t\tcallBack(uniInvitationCode)\n\t\t\t\t\t\t\t\t//当前用户是其他用户推荐下载的。这里登记他的推荐者id 为当前用户的myInviteCode。判断如果是注册\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcallBack()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfail() {\n\t\t\t\t\t\t\tconsole.log('error--');\n\t\t\t\t\t\t\tcallBack()\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcomplete() {\n\t\t\t\t\t\t\t// #ifdef MP-WEIXIN\n\t\t\t\t\t\t\tuni.hideToast()\n\t\t\t\t\t\t\t// #endif\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t// console.log(params);\n\t\t\t}\r\n\t\t\t// console.log(params);\n\t\t},\r\n\t\tsuccess(e) {\r\n\t\t\tconsole.log(e);\r\n\t\t},\r\n\t\tcomplete() {\r\n\r\n\t\t},\n\t\tfail(e){\n\t\t\tconsole.error(e);\n\t\t\t// if (debug) {\n\t\t\t// \tuni.showModal({\n\t\t\t// \t\tcontent: JSON.stringify(e),\n\t\t\t// \t\tshowCancel: false\n\t\t\t// \t});\n\t\t\t// }else{\n\t\t\t// \tuni.showToast({\n\t\t\t// \t\ttitle: '系统错误请稍后再试',\n\t\t\t// \t\ticon:'error'\n\t\t\t// \t});\n\t\t\t// }\n\t\t}\r\n\t})\r\n\r\n\r\n\t// #ifdef APP\r\n\t// 监听并提示设备网络状态变化\r\n\tuni.onNetworkStatusChange(res => {\r\n\t\tconsole.log(res.isConnected);\r\n\t\tconsole.log(res.networkType);\r\n\t\tif (res.networkType != 'none') {\r\n\t\t\tuni.showToast({\r\n\t\t\t\ttitle: '当前网络类型：' + res.networkType,\r\n\t\t\t\ticon: 'none',\r\n\t\t\t\tduration: 3000\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tuni.showToast({\r\n\t\t\t\ttitle: '网络类型：' + res.networkType,\r\n\t\t\t\ticon: 'none',\r\n\t\t\t\tduration: 3000\r\n\t\t\t})\r\n\t\t}\r\n\t});\r\n\t// #endif\r\n\r\n}\r\n/**\r\n * // 初始化appVersion\r\n */\r\nfunction initAppVersion() {\r\n\t// #ifdef APP-PLUS\r\n\tlet appid = plus.runtime.appid;\r\n\tplus.runtime.getProperty(appid, (wgtInfo) => {\r\n\t\tlet appVersion = plus.runtime;\r\n\t\tlet currentVersion = appVersion.versionCode > wgtInfo.versionCode ? appVersion : wgtInfo;\r\n\t\tgetApp({\r\n\t\t\tallowDefault: true\r\n\t\t}).appVersion = {\r\n\t\t\t...currentVersion,\r\n\t\t\tappid,\r\n\t\t\thasNew: false\r\n\t\t}\r\n\t\t// 检查更新小红点\r\n\t\tcallCheckVersion().then(res => {\r\n\t\t\t// console.log('检查是否有可以更新的版本', res);\r\n\t\t\tif (res.result.code > 0) {\r\n\t\t\t\t// 有新版本\r\n\t\t\t\tgetApp({\r\n\t\t\t\t\tallowDefault: true\r\n\t\t\t\t}).appVersion.hasNew = true;\n\t\t\t\tconsole.log(checkUpdate());\r\n\t\t\t}\r\n\t\t})\r\n\t});\r\n\t// 检查更新\r\n\t// #endif\r\n}"],"names":["uniCloud","uniStarterConfig","uni"],"mappings":";;;AAWA,MAAM,KAAKA,cAAQ,GAAC,SAAU;AACf,eAAA,UAAiB;AACjBC,oBAAAA,OAAiB;AAG/B,aAAW,MAAM;AAChB,WAAO;AAAA,MACN,cAAc;AAAA,IACjB,CAAG,EAAE,WAAW,SAASA;EACvB,GAAE,CAAC;AAOJ,WAAS,UAAU;AAAA,IAClB;AAAA;AAAA,IACA;AAAA,EACF,GAAI;AACFC,kBAAAA,MAAY,MAAA,OAAA,2BAAA,aAAa;AAAA,MACxB;AAAA,MACA;AAAA,IACH,CAAG;AAEDA,kBAAc,MAAA,MAAA,SAAA,2BAAA,MAAM,OAAO;AAAA,EAC3B;AAED,KAAG,GAAG,SAAS,SAAS;AAIxBF,gBAAAA,GAAS,gBAAgB;AAAA,IACxB,MAAM,OAAO;AAAA,MACZ;AAAA;AAAA,MACA;AAAA;AAAA,MACA;AAAA;AAAA,IACH,GAAK;AAMF,UAAG,cAAc,gBAAgB,WAAW,SAAS,SAAS,KAAM,CAAC,SAAQ,cAAc,EAAE,SAAS,UAAU,IAAI;AACnHE,sBAAAA,MAAY,MAAA,OAAA,2BAAA,WAAW;AACvB,eAAO,CAAC,EAAE,aAAa,MAAM,IAAI,QAAQ,CAAC,aAAa;AACtDA,wBAAAA,MAAI,iBAAiB;AAAA,YACpB,SAAS,SAAS,KAAK;AACtBA,4BAAA,MAAA,MAAA,OAAA,2BAAY,WAAS,IAAI,IAAI;AAC7B,kBAAI,IAAI,KAAK,MAAM,GAAG,EAAE,KAAK,sBAAsB;AAClD,oBAAI,oBAAoB,IAAI,KAAK,MAAM,IAAI,EAAE;AAC7CA,8BAAY,MAAA,MAAA,OAAA,2BAAA,8BAA8B,iBAAiB;AAK3D,yBAAS,iBAAiB;AAAA,cAElC,OAAc;AACN,yBAAU;AAAA,cACV;AAAA,YACD;AAAA,YACD,OAAO;AACNA,4BAAAA,8CAAY,SAAS;AACrB,uBAAU;AAAA,YACV;AAAA,YACD,WAAW;AAEVA,4BAAAA,MAAI,UAAW;AAAA,YAEf;AAAA,UACP,CAAM;AAAA,QACN,CAAK;AAAA,MAED;AAAA,IAED;AAAA,IACD,QAAQ,GAAG;AACVA,oBAAAA,MAAA,MAAA,OAAA,2BAAY,CAAC;AAAA,IACb;AAAA,IACD,WAAW;AAAA,IAEV;AAAA,IACD,KAAK,GAAE;AACNA,oBAAAA,MAAA,MAAA,SAAA,2BAAc,CAAC;AAAA,IAYf;AAAA,EACH,CAAE;AAwBF;;"}