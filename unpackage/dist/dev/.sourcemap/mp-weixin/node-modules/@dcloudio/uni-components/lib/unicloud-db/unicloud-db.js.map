{"version":3,"file":"unicloud-db.js","sources":["../../../../../HBuilderX.3.8.7.20230703/HBuilderX/plugins/uniapp-cli-vite/node_modules/@dcloudio/uni-components/lib/unicloud-db/unicloud-db.vue","../../../../../HBuilderX.3.8.7.20230703/HBuilderX/plugins/uniapp-cli-vite/uniComponent:/QzovSEJ1aWxkZXJYLjMuOC43LjIwMjMwNzAzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGktdml0ZS9ub2RlX21vZHVsZXMvQGRjbG91ZGlvL3VuaS1jb21wb25lbnRzL2xpYi91bmljbG91ZC1kYi91bmljbG91ZC1kYi52dWU"],"sourcesContent":["<template>\n  <view>\n    <slot\n      :options=\"options\"\n      :data=\"dataList\"\n      :pagination=\"paginationInternal\"\n      :loading=\"loading\"\n      :hasMore=\"hasMore\"\n      :error=\"errorMessage\"\n    />\n  </view>\n</template>\n\n<script>\nimport { onMounted, getCurrentInstance } from 'vue'\nimport { ssrRef, shallowSsrRef } from '@dcloudio/uni-app'\nimport { initVueI18n } from '@dcloudio/uni-i18n'\nimport messages from './i18n/index'\n\nconst isArray = Array.isArray\n\nconst { t } = initVueI18n(messages)\n\nconst events = {\n  load: 'load',\n  error: 'error'\n}\nconst pageMode = {\n  add: 'add',\n  replace: 'replace'\n}\nconst loadMode = {\n  auto: 'auto',\n  onready: 'onready',\n  manual: 'manual'\n}\n\nconst attrs = [\n  'pageCurrent',\n  'pageSize',\n  'collection',\n  'action',\n  'field',\n  'getcount',\n  'orderby',\n  'where',\n  'groupby',\n  'groupField',\n  'distinct'\n]\n\nexport default {\n  name: 'UniClouddb',\n  // #ifdef VUE3\n  setup(props) {\n    // 单条记录时，使用shallowRef（仅支持赋值修改），列表时，采用ref（支持push等修改）\n    const dataListRef = props.ssrKey ? (props.getone ? shallowSsrRef(undefined, props.ssrKey) : ssrRef([], props.ssrKey)) : (props.getone ? shallowSsrRef(undefined) : ssrRef([]))\n    const instance = getCurrentInstance()\n    onMounted(() => {\n      // client端判断是否需要再次请求数据（正常情况下，SSR返回的html中已包含此数据状态，无需再次额外请求）\n      if ((!dataListRef.value || dataListRef.value.length === 0) && !props.manual && props.loadtime === loadMode.auto) {\n        instance.proxy.loadData()\n      }\n    })\n    return { dataList: dataListRef }\n  },\n  // 服务端serverPrefetch生命周期，用于服务端加载数据，等将来全端支持Suspense时，可以采用 Suspense + async setup 来实现一版\n  async serverPrefetch() {\n    if (!this.manual && this.loadtime === loadMode.auto) {\n      return this.loadData()\n    }\n  },\n  // #endif\n  props: {\n    options: {\n      type: [Object, Array],\n      default() {\n        return {}\n      }\n    },\n    spaceInfo: {\n      type: Object,\n      default() {\n        return {}\n      }\n    },\n    collection: {\n      type: [String, Array],\n      default: ''\n    },\n    action: {\n      type: String,\n      default: ''\n    },\n    field: {\n      type: String,\n      default: ''\n    },\n    orderby: {\n      type: String,\n      default: ''\n    },\n    where: {\n      type: [String, Object],\n      default: ''\n    },\n    pageData: {\n      type: String,\n      default: 'add'\n    },\n    pageCurrent: {\n      type: Number,\n      default: 1\n    },\n    pageSize: {\n      type: Number,\n      default: 20\n    },\n    getcount: {\n      type: [Boolean, String],\n      default: false\n    },\n    getone: {\n      type: [Boolean, String],\n      default: false\n    },\n    gettree: {\n      type: [Boolean, String, Object],\n      default: false\n    },\n    gettreepath: {\n      type: [Boolean, String],\n      default: false\n    },\n    startwith: {\n      type: String,\n      default: ''\n    },\n    limitlevel: {\n      type: Number,\n      default: 10\n    },\n    groupby: {\n      type: String,\n      default: ''\n    },\n    groupField: {\n      type: String,\n      default: ''\n    },\n    distinct: {\n      type: [Boolean, String],\n      default: false\n    },\n    pageIndistinct: {\n      type: [Boolean, String],\n      default: false\n    },\n    foreignKey: {\n      type: String,\n      default: ''\n    },\n    loadtime: {\n      type: String,\n      default: 'auto'\n    },\n    manual: {\n      type: Boolean,\n      default: false\n    },\n    ssrKey: {\n      type: [String, Number],\n      default: \"\"\n    }\n  },\n  data() {\n    return {\n      loading: false,\n      hasMore: false,\n      // #ifndef VUE3\n      dataList: [],\n      // #endif\n      paginationInternal: {},\n      errorMessage: ''\n    }\n  },\n  computed: {\n    collectionArgs () {\n      return isArray(this.collection) ? this.collection : [this.collection]\n    },\n    isLookup () {\n      return (isArray(this.collection) && this.collection.length > 1) || (typeof this.collection === 'string' && this.collection.indexOf(',') > -1)\n    },\n    mainCollection () {\n      if (typeof this.collection === 'string') {\n        return this.collection.split(',')[0]\n      }\n      const mainQuery = JSON.parse(JSON.stringify(this.collection[0]))\n      return mainQuery.$db[0].$param[0]\n    }\n  },\n  created() {\n    this._isEnded = false\n    this.paginationInternal = {\n      current: this.pageCurrent,\n      size: this.pageSize,\n      count: 0\n    }\n    // #ifndef VUE3\n    if (this.getone) {\n      this.dataList = undefined\n    }\n    // #endif\n\n    this.$watch(() => {\n      var al = []\n      attrs.forEach(key => {\n        al.push(this[key])\n      })\n      return al\n    }, (newValue, oldValue) => {\n      this.paginationInternal.size = this.pageSize\n      if (newValue[0] !== oldValue[0]) {\n        this.paginationInternal.current = this.pageCurrent\n      }\n      if (this.loadtime === loadMode.manual) {\n        return\n      }\n\n      let needReset = false\n      for (let i = 2; i < newValue.length; i++) {\n        if (newValue[i] !== oldValue[i]) {\n          needReset = true\n          break\n        }\n      }\n      if (needReset) {\n        this.clear()\n        this.reset()\n      }\n\n      this._execLoadData()\n    })\n\n    // #ifdef MP-TOUTIAO\n    let changeName\n    const events = this.$scope.dataset.eventOpts || []\n    for (var i = 0; i < events.length; i++) {\n      const event = events[i]\n      if (event[0].includes('^load')) {\n        changeName = event[1][0][0]\n      }\n    }\n    if (changeName) {\n      let parent = this.$parent\n      let maxDepth = 16\n      this._changeDataFunction = null\n      while (parent && maxDepth > 0) {\n        const fun = parent[changeName]\n        if (fun && typeof fun === 'function') {\n          this._changeDataFunction = fun\n          maxDepth = 0\n          break\n        }\n        parent = parent.$parent\n        maxDepth--\n      }\n    }\n    // #endif\n\n  },\n  // #ifndef VUE3\n  mounted() {\n    if (!this.manual && this.loadtime === loadMode.auto) {\n      this.loadData()\n    }\n  },\n  // #endif\n  methods: {\n    loadData(args1, args2) {\n      let callback = null\n      let clear = false\n      if (typeof args1 === 'object') {\n        if (args1.clear) {\n          if (this.pageData === pageMode.replace) {\n            this.clear()\n          } else {\n            clear = args1.clear\n          }\n          this.reset()\n        }\n        if (args1.current !== undefined) {\n          this.paginationInternal.current = args1.current\n        }\n        if (typeof args2 === 'function') {\n          callback = args2\n        }\n      } else if (typeof args1 === 'function') {\n        callback = args1\n      }\n\n      return this._execLoadData(callback, clear)\n    },\n    loadMore() {\n      if (this._isEnded || this.loading) {\n        return\n      }\n\n      if (this.pageData === pageMode.add) {\n        this.paginationInternal.current++\n      }\n\n      this._execLoadData()\n    },\n    refresh() {\n      this.clear()\n      this._execLoadData()\n    },\n    clear() {\n      this._isEnded = false\n      this.dataList = []\n    },\n    reset() {\n      this.paginationInternal.current = 1\n    },\n    add(value, {\n      action,\n      showToast = true,\n      toastTitle,\n      success,\n      fail,\n      complete,\n      needConfirm = true,\n      needLoading = true,\n      loadingTitle = ''\n    } = {}) {\n      if (needLoading) {\n        uni.showLoading({\n          title: loadingTitle\n        })\n      }\n      /* eslint-disable no-undef */\n      let db = uniCloud.database(this.spaceInfo)\n      if (action) {\n        db = db.action(action)\n      }\n\n      db.collection(this.mainCollection).add(value).then((res) => {\n        success && success(res)\n        if (showToast) {\n          uni.showToast({\n            title: toastTitle || t('uniCloud.component.add.success')\n          })\n        }\n      }).catch((err) => {\n        fail && fail(err)\n        if (needConfirm) {\n          uni.showModal({\n            content: err.message,\n            showCancel: false\n          })\n        }\n      }).finally(() => {\n        if (needLoading) {\n          uni.hideLoading()\n        }\n        complete && complete()\n      })\n    },\n    remove(id, {\n      action,\n      success,\n      fail,\n      complete,\n      confirmTitle,\n      confirmContent,\n      needConfirm = true,\n      needLoading = true,\n      loadingTitle = ''\n    } = {}) {\n      if (!id || !id.length) {\n        return\n      }\n      if (!needConfirm) {\n        this._execRemove(id, action, success, fail, complete, needConfirm, needLoading, loadingTitle)\n        return\n      }\n      uni.showModal({\n        title: confirmTitle || t('uniCloud.component.remove.showModal.title'),\n        content: confirmContent || t('uniCloud.component.remove.showModal.content'),\n        showCancel: true,\n        success: (res) => {\n          if (!res.confirm) {\n            return\n          }\n          this._execRemove(id, action, success, fail, complete, needConfirm, needLoading, loadingTitle)\n        }\n      })\n    },\n    update(id, value, {\n      action,\n      showToast = true,\n      toastTitle,\n      success,\n      fail,\n      complete,\n      needConfirm = true,\n      needLoading = true,\n      loadingTitle = ''\n    } = {}) {\n      if (needLoading) {\n        uni.showLoading({\n          title: loadingTitle\n        })\n      }\n      let db = uniCloud.database(this.spaceInfo)\n      if (action) {\n        db = db.action(action)\n      }\n\n      return db.collection(this.mainCollection).doc(id).update(value).then((res) => {\n        success && success(res)\n        if (showToast) {\n          uni.showToast({\n            title: toastTitle || t('uniCloud.component.update.success')\n          })\n        }\n      }).catch((err) => {\n        fail && fail(err)\n        if (needConfirm) {\n          uni.showModal({\n            content: err.message,\n            showCancel: false\n          })\n        }\n      }).finally(() => {\n        if (needLoading) {\n          uni.hideLoading()\n        }\n        complete && complete()\n      })\n    },\n    getTemp(isTemp = true) {\n      let db = uniCloud.database(this.spaceInfo)\n\n      if (this.action) {\n        db = db.action(this.action)\n      }\n\n      db = db.collection(...this.collectionArgs)\n\n      if (this.foreignKey) {\n        db = db.foreignKey(this.foreignKey)\n      }\n      if (!(!this.where || !Object.keys(this.where).length)) {\n        db = db.where(this.where)\n      }\n      if (this.field) {\n        db = db.field(this.field)\n      }\n      if (this.groupby) {\n        db = db.groupBy(this.groupby)\n      }\n      if (this.groupField) {\n        db = db.groupField(this.groupField)\n      }\n      if (this.distinct === true) {\n        db = db.distinct()\n      }\n      if (this.orderby) {\n        db = db.orderBy(this.orderby)\n      }\n\n      const {\n        current,\n        size\n      } = this.paginationInternal\n      const getOptions = {}\n      if (this.getcount) {\n        getOptions.getCount = this.getcount\n      }\n      const treeOptions = {\n        limitLevel: this.limitlevel,\n        startWith: this.startwith\n      }\n      if (this.gettree) {\n        getOptions.getTree = treeOptions\n      }\n      if (this.gettreepath) {\n        getOptions.getTreePath = treeOptions\n      }\n      db = db.skip(size * (current - 1)).limit(size)\n\n      if (isTemp) {\n        db = db.getTemp(getOptions)\n        db.udb = this\n      } else {\n        db = db.get(getOptions)\n      }\n\n      return db\n    },\n    setResult(result) {\n      if (result.code === 0) {\n        this._execLoadDataSuccess(result)\n      } else {\n        this._execLoadDataFail(new Error(result.message))\n      }\n    },\n    _execLoadData(callback, clear) {\n      if (this.loading) {\n        return\n      }\n      this.loading = true\n      this.errorMessage = ''\n\n      return this._getExec().then((res) => {\n        this.loading = false\n        this._execLoadDataSuccess(res.result, callback, clear)\n      }).catch((err) => {\n        this.loading = false\n        this._execLoadDataFail(err, callback)\n      })\n    },\n    _execLoadDataSuccess(result, callback, clear) {\n      const {\n        data,\n        count\n      } = result\n      this._isEnded = count !== undefined ? (this.paginationInternal.current * this.paginationInternal.size >= count) : (data.length < this.pageSize)\n      this.hasMore = !this._isEnded\n\n      const data2 = this.getone ? (data.length ? data[0] : undefined) : data\n\n      if (this.getcount) {\n        this.paginationInternal.count = count\n      }\n\n      callback && callback(data2, this._isEnded, this.paginationInternal)\n      this._dispatchEvent(events.load, data2)\n\n      if (this.getone || this.pageData === pageMode.replace) {\n        this.dataList = data2\n      } else {\n        if (clear) {\n          this.dataList = data2\n        } else {\n          this.dataList.push(...data2)\n        }\n      }\n    },\n    _execLoadDataFail(err, callback) {\n      this.errorMessage = err\n      callback && callback()\n      this.$emit(events.error, err)\n      if (process.env.NODE_ENV === 'development') {\n        console.error(err)\n      }\n    },\n    _getExec() {\n      return this.getTemp(false)\n    },\n    _execRemove(id, action, success, fail, complete, needConfirm, needLoading, loadingTitle) {\n      if (!this.collection || !id) {\n        return\n      }\n\n      const ids = isArray(id) ? id : [id]\n      if (!ids.length) {\n        return\n      }\n\n      if (needLoading) {\n        uni.showLoading({\n          mask: true,\n          title: loadingTitle\n        })\n      }\n\n      const db = uniCloud.database(this.spaceInfo)\n      const dbCmd = db.command\n\n      let exec = db\n      if (action) {\n        exec = exec.action(action)\n      }\n\n      exec.collection(this.mainCollection).where({\n        _id: dbCmd.in(ids)\n      }).remove().then((res) => {\n        success && success(res.result)\n        if (this.pageData === pageMode.replace) {\n          this.refresh()\n        } else {\n          this.removeData(ids)\n        }\n      }).catch((err) => {\n        fail && fail(err)\n        if (needConfirm) {\n          uni.showModal({\n            content: err.message,\n            showCancel: false\n          })\n        }\n      }).finally(() => {\n        if (needLoading) {\n          uni.hideLoading()\n        }\n        complete && complete()\n      })\n    },\n    removeData(ids) {\n      const il = ids.slice(0)\n      const dl = this.dataList\n      for (let i = dl.length - 1; i >= 0; i--) {\n        const index = il.indexOf(dl[i]._id)\n        if (index >= 0) {\n          dl.splice(i, 1)\n          il.splice(index, 1)\n        }\n      }\n    },\n    _dispatchEvent(type, data) {\n      if (this._changeDataFunction) {\n        this._changeDataFunction(data, this._isEnded, this.paginationInternal)\n      } else {\n        this.$emit(type, data, this._isEnded, this.paginationInternal)\n      }\n    }\n  }\n}\n</script>\n","import Component from 'C:/HBuilderX.3.8.7.20230703/HBuilderX/plugins/uniapp-cli-vite/node_modules/@dcloudio/uni-components/lib/unicloud-db/unicloud-db.vue'\nwx.createComponent(Component)"],"names":["initVueI18n","messages","shallowSsrRef","ssrRef","getCurrentInstance","onMounted","uni","uniCloud"],"mappings":"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","x_google_ignoreList":[0]}